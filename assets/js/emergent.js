/* PENDIENTE ARREGLAR LA VENTANA EMERGENTE DE GALERIA */

// FORMULARIO EMERGENTE
const btnAbrirPopup = document.getElementById('btn-abrir-popup'),
      overlay = document.getElementById('overlay'),
      popup = document.getElementById('popup'),
      btnCerrarPopup = document.getElementById('btn-cerrar-popup');

btnAbrirPopup.addEventListener('click', () => {
     overlay.classList.add('active');
     popup.classList.add('active');
     document.getElementsByTagName("html")[0].style.overflow = "hidden";

});


btnCerrarPopup.addEventListener('click', (e) => {
    e.preventDefault();
    overlay.classList.remove('active');
    popup.classList.remove('active');
    document.getElementsByTagName("html")[0].style.overflow = "auto";

});

// Galeria emergente

const overlayGalery = document.querySelector('.overlayGalery');
const overlayImage = document.querySelector('.overlayGalery img');
const galeriaPopup = document.getElementById('galeria-popup');
const listaCafe = document.querySelector('#price');
// console.log(listaCafe);
const cerrar = document.getElementById('cerrar');

/* const texto = document.querySelectorAll('.galery .galery__item .galery_cover')
const overlayTexto = document.querySelector('.overlayGalery .galeria-popup .emergentTexts .coffeText h2');
 */


document.querySelectorAll('.galery .galery__item').forEach((elemento) => {
    

    elemento.addEventListener('click', (e) => {
        overlayGalery.classList.add('activo');
        galeriaPopup.classList.add('activo');
        // recuperamos la ruta de la imagen de del texto mediante nodos
        const src = e.currentTarget.querySelector('img').src;
        const descripcion = elemento.querySelector('h2').textContent;
        const descriptionPrice = elemento.lastElementChild;
        // console.log(descriptionPrice);
        overlayImage.src = src;
        //indicar la ruta y la descripcion a donde va ir el texto almacenado en const descripcion, con innerHTML lo colocamos
        document.querySelector('#overlayGalery .description').innerHTML = descripcion;

        document.querySelector('#overlayGalery .descriptionPrice').innerHTML = descriptionPrice.outerHTML;
       

        //quitamos el scroll de la web al abrir el popUp, no se movera nada de atras
        document.getElementsByTagName("html")[0].style.overflow = "hidden";
    });
});

cerrar.addEventListener('click', (e) => {
    e.preventDefault();
    overlayGalery.classList.remove('activo');
    galeriaPopup.classList.remove('activo');
    document.getElementsByTagName("html")[0].style.overflow = "auto";

});


/* BOTON EMERGETE */
/* SI QUITAMOS ESTE BOTON PODEMOS DEJAR LA OPCION DE MENU DESAPARECE */

// Funcionalidad de boton de arriba
window.onscroll = function() {
    // cuando hagamos scroll hacia abajo que se muestre
    // console.log(document.documentElement.scrolltop); // nos vamos a consola para ver en que posicion estamos
    if (document.documentElement.scrollTop > 50) { //100: es la posicion en la cual esta el scrool
        document.querySelector('.go-top-container').classList.add('show');
    } else { // para decirle que cuando sea menor a 100 que remueva esa clase
        document.querySelector('.go-top-container').classList.remove('show');
    }
  }
  
  
  document.querySelector('.go-top-container').addEventListener('click', () => {
    window.scrollTo({ 
        top: 0,
        behavior: 'smooth' // efecto que te manda suave hacia arriba
    })
  });


//   *Carrito de compras

// Variables
const carrito = document.querySelector('#carrito');
const contenedorCarrito = document.querySelector('#lista-carrito tbody');
const vaciarCarritoBtn = document.querySelector('#vaciar-carrito');
const listaCafes = document.querySelector('#overlayGalery  .descriptionPrice');
let cafeCarrito = [];

// EVENTS LISTENERS
cargarEventListeners();

function cargarEventListeners() {

    listaCafes.addEventListener('click', agregarCafe);

    carrito.addEventListener('click', eliminarCafe);

    document.addEventListener('DOMContentLoaded', () => {
        cafeCarrito = JSON.parse(localStorage.getItem('carrito')) || [];
        // *si el usuario no ha agregado nada al carrito marca null, por eso agregamos esto []
        carritoHTML();
    });

    // * Vaciar el carrito
    vaciarCarritoBtn.addEventListener('click', () => {
        cafeCarrito = []; // resetear el arreglo
        limpiarHTML(); // Eliminamos todo el HTML
        event.preventDefault();
    })
}

// funciones
function agregarCafe(e) {
    e.preventDefault(); // evitamos la accion por default
    // prevenimos el EVENT BUBLING
    if (e.target.classList.contains('eachPrice')) {
        const precioSeleccionado = e.target.parentElement;
        const cafeSeleccionado = e.target.parentElement.parentElement.parentElement.
        parentElement.parentElement.parentElement.parentElement;
        
        // console.log(cafeSeleccionado, 'aqui esta el cafe seleccionado');
        // console.log(precioSeleccionado, 'aqui esta el precio seleccionado');

        // Agregar al carrito
        leerDatosCafe(cafeSeleccionado, precioSeleccionado);
    }
}


function eliminarCafe(e) {
    if(e.target.classList.contains('borrar-curso')) {
        const cursoId = e.target.getAttribute('data-id');

        // Eliminar valor del arreglo por dataid
        cafeCarrito = cafeCarrito.filter(cafe => cafe.id !== cursoId);
        event.preventDefault();

    }
        // tomamos de nuevo el articulo original para iterar sobre el 

    carritoHTML();
}


function leerDatosCafe(cafe, precio)  {
    let nivel = ''

    const precioCabezera = precio.querySelector('td a').getAttribute('data-id');
    if (precioCabezera === '1') {
        nivel = 'chico';
    } else if (precioCabezera === '2') {
        nivel = 'mediano';
    } else if (precioCabezera === '3') {
        nivel = 'grande';
    }  else if (precioCabezera === '4') {
        nivel = 'alto';
    } else {
        return;
    }

    // console.log(precioCabezera, 'ALGO BIEN PERRO');
    const infoCafe = {
        imagen: cafe.querySelector('img').src,
        tipo: cafe.querySelector('h2').textContent,
        tamaño: nivel,
        precio: precio.querySelector('td a').getAttribute('value'), 
        id: precio.querySelector('td a').getAttribute('data-id'),
        cantidad: 1
    }
    // console.log(infoCafe,'ESTO ESTA PERRO CARNAL');

    // revisa si un elemento ya existe
    const existe = cafeCarrito.some(cafe => cafe.id === infoCafe.id);
    if(existe) {
        // map - crea un nuevo arreglo
        const cafes = cafeCarrito.map(cafe => {
            if(cafe.id === infoCafe.id) {
                cafe.cantidad++;
                return cafe; // retorna objeto actualizado
            // * retornamos valor porque mao lo necesita para el nuevo arr[]
            } else {
                // retornamos el cafe como esta
                return cafe;
                // objetos que no están duplicados
            }
        });
        cafeCarrito = [...cafes];
    } else {
        cafeCarrito = [...cafeCarrito, infoCafe];
        // console.log(cafeCarrito, 'VIENDO QUE PEDO');
        // agregamos el curso al carrito
        // agrega elementos al arreglo de carrito
        /* usamos el spread para ir agregando el carrito de compras y hacer copias de cada arreglo
          y no perder el valor */
    }
    carritoHTML();    
}


// *Mostrar carrito en el HTML

function carritoHTML() {

    // Limpiar el HTML
    limpiarHTML();

    // Recorrer carrito y genera el HTML
    cafeCarrito.forEach(cafe => {
        // console.log(cafe, 'tratando de armar el carrito en el HTML');
        const {imagen, tipo, tamaño, cantidad, precio, id } = cafe;
        // destruction objects
        const row = document.createElement('tr');
        row.innerHTML = `
            <td><img src=${imagen} width="50"></td>
            <td>${tipo}</td>
            <td>${tamaño}</td>
            <td>${cantidad}</td>
            <td>${precio}</td>
            <td><a href=# class="borrar-curso" data-id="${id}"style=" padding: 5px 8px; color: #fff;"> X </a></td>
        `
        // Agregar el contenido del carrito en el tbody de HTML
          contenedorCarrito.appendChild(row);
        // vamos agregando cada row, en cada interacción
    });

    // * Sincronizar con Storage
    sincronizarStorage();
}


function sincronizarStorage() {
    localStorage.setItem('carrito', JSON.stringify(cafeCarrito));
}


function limpiarHTML() {
    while(contenedorCarrito.firstChild) { // si el contenedor carrito tiene al menos un elemento 
        contenedorCarrito.removeChild(contenedorCarrito.firstChild);
    }
}

/* NOTA: remove solo necesita referencia al child. 
removeChild necesita referencia al padre y al child; el resultado es el mismo. */



















































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































  